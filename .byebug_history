c
devise_controller? and current_user.present? and another_class?
c
current_admin
devise_controller?
c
current_admin
current_user
c
devise_controller? and (current_admin.present? or (current_user.present? and another_class?))
devise_controller? and current_admin.nil? and current_user.present? and another_class?
current_admin.nil?
current_admin
c
resource_name
params
c
params
c
params
resource
resource_name
reource_name
c
resource_name
c
resource_name
resource
c
current_user
params
c
params
admin
params
self
params
controller_path == "rails_admin/main"
c
controller_path == "rails_admin/main"
c
params
controller_path
controller_path == "rails_admin/main"
c
controller_path
controller_name
locale
self.path
path
admin_session
admin_session?
self.controller
self.methods
self.methos
params
resource_name
c
devise_controller? and current_user and another_class?
devise_controller? and current_user.present? and another_class?
devise_controller? and a and another_class?
a = "oi"
devise_controller? and a and another_class?
a = nil
devise_controller? and nil and another_class?
devise_controller? and current_user.present? and another_class?
current_user.is_a?(User)
current_user
c
current_person.is_a?(Seller)
another_class?
c
current_person
c
a
a = "oi" unless current_person.nil? and current_person.is_a?(resource_class)
current_person.nil? and current_person.is_a?(resource_class)
c
current_person.nil?
current_person.is_a?(resource_class)
q
current_person.instance_of?(User)
current_person.instance_of?(Seller)
current_person.model_name.name
current_person.model_name
current_person.methods
current_person.isn_a?(resource_class)
current_person.is_a?(resource_class)
current_person.not_a?(resource_class)
current_person.is_not_a?(resource_class)
current_person.is_not?(resource_class)
current_person.is_a?(resource_class)
resource_class
q
current_person.is_a?("User")
current_person.is_a?(User)
current_person
resource_name.capitalize.to_s.constantize
resource_name.capitalize.to_s
resource_name.capitalize
resource_name
:user.capitalize.to_s.constantize
:user.capitalize.constantize
:user.capitalize
current_person
current_persons
String.to_sym
String.to_s.to_sym
String.to_s
:user.to_s.constantize
:user.to_s
"String".constantize
:user.capitalize.constantize
:user.capitalize.to_s
:user.capitalize
:user.captalize
:user.to_s.match("User")
:user.match("User")
:user === "user"
:user === "User"
:user.methods
String.to_s.to_sym
String.to_s
String.to_sym
String
:user.constantize
current_person.is_a?(User)
current_person.is_a?(:user)
"a".to_sym
current_person.class.to_syn
current_person.class.to_sym
current_person.class
current_person.resource
current_person
current_use.class
resource_name
current_person.present?
current_person
c
current_person
resource_name
devise_controller?
devise_controller
c
signed_in?
current_person.signed_in?
current_person
c
params[:action]
action
controller
params
resource_name
devise_controller?
resource
current_person
person_signed_in?
